import streamlit as st
from PyPDF2 import PdfReader
from langchain.embeddings.openai import OpenAIEmbeddings
from langchain.text_splitter import CharacterTextSplitter
from langchain.vectorstores import FAISS
from langchain.chains.question_answering import load_qa_chain
from langchain.llms import OpenAI
import os

# Set your OpenAI API key
os.environ["OPENAI_API_KEY"] = ""

# Streamlit app
st.title("PDF Query with LangChain and OpenAI")

# Initialize session state
if 'uploaded_file' not in st.session_state:
    st.session_state.uploaded_file = None
if 'query' not in st.session_state:
    st.session_state.query = ''
if 'answer' not in st.session_state:
    st.session_state.answer = ''

# Upload PDF
uploaded_file = st.file_uploader("Upload a PDF file", type="pdf")

if uploaded_file is not None:
    st.session_state.uploaded_file = uploaded_file
    pdfreader = PdfReader(uploaded_file)

    # Read text from PDF
    raw_text = ''
    for i, page in enumerate(pdfreader.pages):
        content = page.extract_text()
        if content:
            raw_text += content

    # Split text
    text_splitter = CharacterTextSplitter(
        separator="\n",
        chunk_size=800,
        chunk_overlap=200,
        length_function=len
    )
    texts = text_splitter.split_text(raw_text)

    # Download embeddings from OpenAI
    embeddings = OpenAIEmbeddings()
    document_search = FAISS.from_texts(texts, embeddings)

    # Load QA chain
    chain = load_qa_chain(OpenAI(), chain_type="stuff")

    # Input query
    query = st.text_input("Enter your query", value=st.session_state.query)

    if st.button("Get Answer"):
        if query:
            st.session_state.query = query
            docs = document_search.similarity_search(query)
            st.session_state.answer = chain.run(input_documents=docs, question=query)
        else:
            st.write("Please enter a query.")

    if st.button("Clear"):
        st.session_state.uploaded_file = None
        st.session_state.query = ''
        st.session_state.answer = ''
        st.experimental_rerun()

    if st.session_state.answer:
        st.write("Answer:", st.session_state.answer)

else:
    st.write("Please upload a PDF file.")
